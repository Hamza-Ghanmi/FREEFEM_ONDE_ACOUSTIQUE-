
load "msh3"
load "medit"
load "iovtk"

// Paramètres


real a=6.; // Longueur
real R=1.; // Rayon
real M=0.2; // nombre de Mach
int n=0; //mode de propagation selon r
int m=2; // mode de propagation selon theta
int l=2; // mode de propagation selon z
real kr=3.05; // vecteur d'onde selon r
real kz=l*pi/a; // vecteur d'onde selon z
real k=sqrt(kr^2+kz^2); // vecteur d'onde
func pz0=jn(m,kr*sqrt(x^2+y^2))*exp(1i*m*atan(y/x));; //condition de Dirichlet

// domaine d'étude et maillage
border C(t=0,2*pi) { x = R*cos(t); y= R*sin(t); label=1;}
mesh Baseh = buildmesh(C(40));

int[int] rup=[0,2],  rdown=[0,1], rmid=[1,3];
func zmin= 0.;
func zmax= a;
int nlayer=100;
mesh3 Th3=buildlayers(Baseh,nlayer,coef= 1.,zbound=[zmin,zmax],labelmid=rmid, reffaceup = rup, reffacelow = rdown);

// espace des fonctions test

fespace Vh3(Th3,P13d) ;
Vh3<complex> v,p;
Vh3 pr;

// resolution

solve onde(p,v)=int3d(Th3)((k^2*v*p)-(dx(v)*dx(p)+dy(v)*dy(p)+dz(v)*dz(p)))
                +int2d(Th3,2)(1i*kz*v*p)
				+on(1,p=pz0)
				;
pr = real(p);

plot(pr, wait=1, fill=true, value=true, dim=3);	

// afichage

int[int] Order = [1];
string DataName = "pr";
savevtk("pr.vtu", Th3, pr, dataname=DataName, order=Order);
